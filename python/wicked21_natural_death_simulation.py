# -*- coding: utf-8 -*-
"""Wicked21 Natural Death Simulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vCVov_Y8wxfRE3T-Gc6r1F_07wqQ70xy

Copyright (C) 2021 Textualization Software Ltd. Distributed under the terms of the [Apache Software License 2.0](http://www.apache.org/licenses/LICENSE-2.0).

This is a notebook for answering the following question:

> How many turns will it take for the players to naturally die (as in, with NO future capacity development of Tech, Policies, & added Character Skills)?  How does this Natural Death turn forecast differ across 3, 4, 5, or 6 player game conditions?


Just click on "Runtime > Run all" to execute it. Different parameters can be changed below.

To make chances, make a copy of this notebook and edit your notebook.

**VERSION=2.0**
"""

### parameter sweep

PLAYER_SWEEP = [ 3, 4, 5, 6 ]

CRISIS_CREATION_PROB_SWEEP = [ 0.4, 0.5, 0.6, 0.7, 0.8 ]
CRISIS_RESOLUTION_PROB_SWEEP = [ 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ]

# remove the first # to try the other graphs
GRAPHS_SWEEP = [
 'MindMeister',
# 'Singleton', # all nodes separated
# 'Line', # all nodes in one line
# 'Radial', # all nodes connected to a center node
# 'Random1', # same number of nodes as MindMeister but randomly linked
# 'Random2', # same number of nodes as MindMeister but randomly linked
# 'Random3', # same number of nodes as MindMeister but randomly linked
]

# game variations to try, see below for an explanation, uncoment undesired ones
GAMES_SWEEP = [
#             'BaseGame',
              'SingleCascade',
]

### simulation parameters

# runs per simulation
RUNS = 100

# maximum number of turns to run the simulation
MAX_TURNS = 40

### reporting criteria

# minimum percentage (expressed as [0,1]) of RUNS that should get to MAX_STEPS
# basically, at least these percentage of runs should win
REP_MIN_COMPLETION_PERC = 0.1

# maximum value accepted for the minimum (exclusive), this ensures some people will lose early
# (we can add a percentage of runs for it, too) 
REP_MAX_MIN    = 0.45 * MAX_TURNS # 18
REP_MIN_MEDIAN = 0.75 * MAX_TURNS # 30

## other parameters

# seed for the random generator
SEED = 42

# graph print size, in inches for whatever that means
GRAPH_PRINT_SIZE = "10,10"

"""Setup code, unimportant."""

#@title
import random
import copy

import graphviz

import numpy as np
import xml.etree.ElementTree as ET


random.seed(SEED)
COLUMN_NAMES=["Game","Graph", "Num. Player", "Creation", "Resolution"]
SWEEPS= [ GAMES_SWEEP, GRAPHS_SWEEP, PLAYER_SWEEP, CRISIS_CREATION_PROB_SWEEP, CRISIS_RESOLUTION_PROB_SWEEP ]

"""This is the exported file from MindMeister, exported in Freemind format. To change it to a new version, just rename the .mm to .txt, open it with a text editor and paste the xml over here. This is 20210812 import.

"""

#@title
MINDMAP = """
<map version="1.0.1">
<node BACKGROUND_COLOR="#ffe180" COLOR="#000000" CREATED="1617813464000" ID="Freemind_Link_1850170073" MODIFIED="1627672597000" TEXT="Wicked Problems">
<edge COLOR="#800000"/><font SIZE="18"/><node BACKGROUND_COLOR="#6bb3b3" COLOR="#454a4c" CREATED="1623953751000" ID="Freemind_Link_1935803955" MODIFIED="1625251127000" POSITION="left" TEXT="Unsustainable Harvesting">
<arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935805524" ENDARROW="Default" ID="Arrow_ID_34988307" STARTARROW="None" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1942921271" ENDARROW="Default" ID="Arrow_ID_34988309" STARTARROW="None" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1942920079" ENDARROW="Default" ENDINCLINATION="-166;-96;" ID="Arrow_ID_34988310" STARTARROW="None" STARTINCLINATION="97;-21;" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935678557" ENDARROW="Default" ID="Arrow_ID_34988435" STARTARROW="None" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-14;-99;" ID="Arrow_ID_34988632" STARTARROW="None" STARTINCLINATION="-847;-33;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#33bbff" COLOR="#3D474D" CREATED="1623946330000" ID="Freemind_Link_1935683919" MODIFIED="1627672537000" POSITION="left" TEXT="Monopoly">
<arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935680963" ENDARROW="Default" ENDINCLINATION="1;-70;" ID="Arrow_ID_34988604" STARTARROW="None" STARTINCLINATION="-135;113;" /><arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-86;-127;" ID="Arrow_ID_34988622" STARTARROW="None" STARTINCLINATION="-175;-78;" /><arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935814137" ENDARROW="Default" ENDINCLINATION="55;-84;" ID="Arrow_ID_35403301" STARTARROW="None" STARTINCLINATION="177;-79;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1624569484000" ID="Freemind_Link_1942921271" MODIFIED="1625251678000" POSITION="right" TEXT="Chemical Pollution">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ID="Arrow_ID_34988336" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Arrow_ID_34988364" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935678557" ENDARROW="Default" ID="Arrow_ID_34988439" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1942921271" ENDARROW="Default" ID="Link_Target_ID_34988309" SOURCE="Freemind_Link_1935803955" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1942921271" ENDARROW="Default" ID="Link_Target_ID_34988314" SOURCE="Freemind_Link_1935810650" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1942921271" ENDARROW="Default" ID="Link_Target_ID_34988427" SOURCE="Freemind_Link_1935814137" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1623953886000" ID="Freemind_Link_1935805524" MODIFIED="1625251609000" POSITION="right" TEXT="Land Conversion">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ID="Arrow_ID_34988335" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935805524" ENDARROW="Default" ID="Link_Target_ID_34988307" SOURCE="Freemind_Link_1935803955" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935805524" ENDARROW="Default" ID="Link_Target_ID_34988324" SOURCE="Freemind_Link_1935710356" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935805524" ENDARROW="Default" ID="Link_Target_ID_34988348" SOURCE="Freemind_Link_1935681163" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#6bb3b3" COLOR="#3D474D" CREATED="1623954433000" ID="Freemind_Link_1935814137" MODIFIED="1625251633000" POSITION="left" TEXT="Polluting Industry">
<arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1942921271" ENDARROW="Default" ID="Arrow_ID_34988427" STARTARROW="None" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-46;-123;" ID="Arrow_ID_34988633" STARTARROW="None" STARTINCLINATION="-422;-81;" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680313" ENDARROW="Default" ENDINCLINATION="-80;-60;" ID="Arrow_ID_34988657" STARTARROW="None" STARTINCLINATION="96;46;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935814137" ENDARROW="Default" ENDINCLINATION="55;-84;" ID="Link_Target_ID_35403301" SOURCE="Freemind_Link_1935683919" STARTARROW="None" STARTINCLINATION="177;-79;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#6bb3b3" COLOR="#3D474D" CREATED="1623954252000" ID="Freemind_Link_1935810650" MODIFIED="1625762098000" POSITION="left" TEXT="Fossil Fuel Dependency">
<arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1942920079" ENDARROW="Default" ENDINCLINATION="-54;-106;" ID="Arrow_ID_34988312" STARTARROW="None" STARTINCLINATION="158;-103;" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935681163" ENDARROW="Default" ENDINCLINATION="-28;-113;" ID="Arrow_ID_34988313" STARTARROW="None" STARTINCLINATION="244;-71;" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1942921271" ENDARROW="Default" ID="Arrow_ID_34988314" STARTARROW="None" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935678147" ENDARROW="Default" ENDINCLINATION="-186;-26;" ID="Arrow_ID_34988316" STARTARROW="None" STARTINCLINATION="126;-12;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#33bbff" COLOR="#3D474D" CREATED="1623946049000" ID="Freemind_Link_1935680659" MODIFIED="1625251852000" POSITION="left" TEXT="Inefficiency">
<arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935680719" ENDARROW="Default" ENDINCLINATION="-98;-22;" ID="Arrow_ID_34988613" STARTARROW="None" STARTINCLINATION="-84;153;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-64;-65;" ID="Link_Target_ID_34988609" SOURCE="Freemind_Link_1935680963" STARTARROW="None" STARTINCLINATION="-94;-84;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-86;-127;" ID="Link_Target_ID_34988622" SOURCE="Freemind_Link_1935683919" STARTARROW="None" STARTINCLINATION="-175;-78;" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-14;-99;" ID="Link_Target_ID_34988632" SOURCE="Freemind_Link_1935803955" STARTARROW="None" STARTINCLINATION="-847;-33;" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-46;-123;" ID="Link_Target_ID_34988633" SOURCE="Freemind_Link_1935814137" STARTARROW="None" STARTINCLINATION="-422;-81;" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="1;-183;" ID="Link_Target_ID_34988643" SOURCE="Freemind_Link_1935710356" STARTARROW="None" STARTINCLINATION="-224;-259;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1623945767000" ID="Freemind_Link_1935677075" MODIFIED="1625251672000" POSITION="right" TEXT="Biodiversity Loss">
<linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ID="Link_Target_ID_34988335" SOURCE="Freemind_Link_1935805524" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ID="Link_Target_ID_34988336" SOURCE="Freemind_Link_1942921271" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ENDINCLINATION="304;-2;" ID="Link_Target_ID_34988337" SOURCE="Freemind_Link_1942920079" STARTARROW="None" STARTINCLINATION="174;0;" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ENDINCLINATION="225;-56;" ID="Link_Target_ID_34988343" SOURCE="Freemind_Link_1935678147" STARTARROW="None" STARTINCLINATION="91;-40;" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ID="Link_Target_ID_34988344" SOURCE="Freemind_Link_1935681163" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1623946102000" ID="Freemind_Link_1935681163" MODIFIED="1625251627000" POSITION="right" TEXT="Climate Change">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ID="Arrow_ID_34988344" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935805524" ENDARROW="Default" ID="Arrow_ID_34988348" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935678557" ENDARROW="Default" ID="Arrow_ID_34988349" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ID="Arrow_ID_34988669" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1942927879" ENDARROW="Default" ENDINCLINATION="-19;-86;" ID="Arrow_ID_34988676" STARTARROW="None" STARTINCLINATION="-32;199;" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Arrow_ID_34988684" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="89;-55;" ID="Arrow_ID_34988688" STARTARROW="None" STARTINCLINATION="-20;104;" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935681163" ENDARROW="Default" ENDINCLINATION="-28;-113;" ID="Link_Target_ID_34988313" SOURCE="Freemind_Link_1935810650" STARTARROW="None" STARTINCLINATION="244;-71;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#33bbff" COLOR="#3D474D" CREATED="1623946080000" ID="Freemind_Link_1935680963" MODIFIED="1625251827000" POSITION="left" TEXT="1% Wealth Hoarding">
<arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="31;-53;" ID="Arrow_ID_34988594" STARTARROW="None" STARTINCLINATION="-86;101;" /><arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="-64;-65;" ID="Arrow_ID_34988609" STARTARROW="None" STARTINCLINATION="-94;-84;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935680963" ENDARROW="Default" ENDINCLINATION="1;-70;" ID="Link_Target_ID_34988604" SOURCE="Freemind_Link_1935683919" STARTARROW="None" STARTINCLINATION="-135;113;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#33bbff" COLOR="#3D474D" CREATED="1623946058000" ID="Freemind_Link_1935680719" MODIFIED="1625251463000" POSITION="left" TEXT="Inflation">
<arrowlink COLOR="#00aaff" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-99;-47;" ID="Arrow_ID_34988616" STARTARROW="None" STARTINCLINATION="-53;60;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935680719" ENDARROW="Default" ENDINCLINATION="-98;-22;" ID="Link_Target_ID_34988613" SOURCE="Freemind_Link_1935680659" STARTARROW="None" STARTINCLINATION="-84;153;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#6bb3b3" COLOR="#454a4c" CREATED="1623948197000" ID="Freemind_Link_1935710356" MODIFIED="1625251109000" POSITION="left" TEXT="Industrial Sprawl">
<arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935805524" ENDARROW="Default" ID="Arrow_ID_34988324" STARTARROW="None" /><arrowlink COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680659" ENDARROW="Default" ENDINCLINATION="1;-183;" ID="Arrow_ID_34988643" STARTARROW="None" STARTINCLINATION="-224;-259;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935710356" ENDARROW="Default" ID="Link_Target_ID_34988414" SOURCE="Freemind_Link_1935679012" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1624569371000" ID="Freemind_Link_1942920079" MODIFIED="1625251668000" POSITION="right" TEXT="Nitrogen &amp; Phosphorous Loading">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ENDINCLINATION="304;-2;" ID="Arrow_ID_34988337" STARTARROW="None" STARTINCLINATION="174;0;" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ID="Arrow_ID_34988362" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1942920079" ENDARROW="Default" ENDINCLINATION="-166;-96;" ID="Link_Target_ID_34988310" SOURCE="Freemind_Link_1935803955" STARTARROW="None" STARTINCLINATION="97;-21;" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1942920079" ENDARROW="Default" ENDINCLINATION="-54;-106;" ID="Link_Target_ID_34988312" SOURCE="Freemind_Link_1935810650" STARTARROW="None" STARTINCLINATION="158;-103;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#454a4c" CREATED="1623945889000" ID="Freemind_Link_1935678557" MODIFIED="1625251646000" POSITION="right" TEXT="Freshwater Depletion">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1942927441" ENDARROW="Default" ID="Arrow_ID_34988351" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ID="Arrow_ID_34988353" STARTARROW="None" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1942927879" ENDARROW="Default" ID="Arrow_ID_34988355" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935678557" ENDARROW="Default" ID="Link_Target_ID_34988349" SOURCE="Freemind_Link_1935681163" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935678557" ENDARROW="Default" ID="Link_Target_ID_34988435" SOURCE="Freemind_Link_1935803955" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935678557" ENDARROW="Default" ID="Link_Target_ID_34988439" SOURCE="Freemind_Link_1942921271" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#987db3" COLOR="#3D474D" CREATED="1623954675000" ID="Freemind_Link_1935817711" MODIFIED="1625251733000" POSITION="left" TEXT="Economic Inequality">
<arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-100;0;" ID="Arrow_ID_34988526" STARTARROW="None" STARTINCLINATION="10;99;" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935679012" ENDARROW="Default" ENDINCLINATION="-100;0;" ID="Arrow_ID_34988551" STARTARROW="None" STARTINCLINATION="16;127;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-220;-49;" ID="Link_Target_ID_34988576" SOURCE="Freemind_Link_1936046954" STARTARROW="None" STARTINCLINATION="-76;29;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-1;68;" ID="Link_Target_ID_34988584" SOURCE="Freemind_Link_1935819604" STARTARROW="None" STARTINCLINATION="371;17;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-120;30;" ID="Link_Target_ID_34988588" SOURCE="Freemind_Link_1935821821" STARTARROW="None" STARTINCLINATION="-49;-36;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="31;-53;" ID="Link_Target_ID_34988594" SOURCE="Freemind_Link_1935680963" STARTARROW="None" STARTINCLINATION="-86;101;" /><linktarget COLOR="#00aaff" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-99;-47;" ID="Link_Target_ID_34988616" SOURCE="Freemind_Link_1935680719" STARTARROW="None" STARTINCLINATION="-53;60;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#987db3" COLOR="#3D474D" CREATED="1623955025000" ID="Freemind_Link_1935821821" MODIFIED="1625251735000" POSITION="left" TEXT="Low Labour Standards">
<arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1942927751" ENDARROW="Default" ENDINCLINATION="449;87;" ID="Arrow_ID_34988515" STARTARROW="None" STARTINCLINATION="62;78;" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Arrow_ID_34988520" STARTARROW="None" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1942929718" ENDARROW="Default" ID="Arrow_ID_34988523" STARTARROW="None" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-120;30;" ID="Arrow_ID_34988588" STARTARROW="None" STARTINCLINATION="-49;-36;" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1936046954" ENDARROW="Default" ENDINCLINATION="-182;-12;" ID="Arrow_ID_34988739" STARTARROW="None" STARTINCLINATION="-122;66;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1623945857000" ID="Freemind_Link_1935678147" MODIFIED="1625251687000" POSITION="right" TEXT="Ocean Degradation">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935677075" ENDARROW="Default" ENDINCLINATION="225;-56;" ID="Arrow_ID_34988343" STARTARROW="None" STARTINCLINATION="91;-40;" /><arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ENDINCLINATION="138;14;" ID="Arrow_ID_34988361" STARTARROW="None" STARTINCLINATION="14;98;" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935678147" ENDARROW="Default" ENDINCLINATION="-186;-26;" ID="Link_Target_ID_34988316" SOURCE="Freemind_Link_1935810650" STARTARROW="None" STARTINCLINATION="126;-12;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e67c73" COLOR="#3D474D" CREATED="1623945831000" ID="Freemind_Link_1935677900" MODIFIED="1625251722000" POSITION="left" TEXT="Social Inequity">
<linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Link_Target_ID_34988463" SOURCE="Freemind_Link_1935679012" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Link_Target_ID_34988493" SOURCE="Freemind_Link_1942929718" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-76;63;" ID="Link_Target_ID_34988496" SOURCE="Freemind_Link_1935709279" STARTARROW="None" STARTINCLINATION="-181;7;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-47;87;" ID="Link_Target_ID_34988504" SOURCE="Freemind_Link_1935685320" STARTARROW="None" STARTINCLINATION="-200;119;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Link_Target_ID_34988513" SOURCE="Freemind_Link_1935679106" STARTARROW="None" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-100;0;" ID="Link_Target_ID_34988526" SOURCE="Freemind_Link_1935817711" STARTARROW="None" STARTINCLINATION="10;99;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-100;8;" ID="Link_Target_ID_34988565" SOURCE="Freemind_Link_1936046954" STARTARROW="None" STARTINCLINATION="145;80;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Link_Target_ID_34988573" SOURCE="Freemind_Link_1935712288" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="89;-55;" ID="Link_Target_ID_34988688" SOURCE="Freemind_Link_1935681163" STARTARROW="None" STARTINCLINATION="-20;104;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-94;33;" ID="Link_Target_ID_34988701" SOURCE="Freemind_Link_1935819604" STARTARROW="None" STARTINCLINATION="145;133;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e67c73" COLOR="#3D474D" CREATED="1624569802000" ID="Freemind_Link_1942927441" MODIFIED="1625251724000" POSITION="left" TEXT="Clean Water Shortage">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ENDINCLINATION="-31;94;" ID="Arrow_ID_34988454" STARTARROW="None" STARTINCLINATION="-88;572;" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1942927441" ENDARROW="Default" ID="Link_Target_ID_34988351" SOURCE="Freemind_Link_1935678557" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#987db3" COLOR="#3D474D" CREATED="1623972632000" ID="Freemind_Link_1936046954" MODIFIED="1625251763000" POSITION="left" TEXT="Discrimination">
<arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-100;8;" ID="Arrow_ID_34988565" STARTARROW="None" STARTINCLINATION="145;80;" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-220;-49;" ID="Arrow_ID_34988576" STARTARROW="None" STARTINCLINATION="-76;29;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1936046954" ENDARROW="Default" ENDINCLINATION="-182;-12;" ID="Link_Target_ID_34988739" SOURCE="Freemind_Link_1935821821" STARTARROW="None" STARTINCLINATION="-122;66;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#a7cc5c" COLOR="#3D474D" CREATED="1623946021000" ID="Freemind_Link_1935680313" MODIFIED="1625251639000" POSITION="right" TEXT="Air &amp; Ozone Degradation">
<arrowlink COLOR="#8acc47" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Arrow_ID_34988358" STARTARROW="None" /><linktarget COLOR="#30bfbf" DESTINATION="Freemind_Link_1935680313" ENDARROW="Default" ENDINCLINATION="-80;-60;" ID="Link_Target_ID_34988657" SOURCE="Freemind_Link_1935814137" STARTARROW="None" STARTINCLINATION="96;46;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#987db3" COLOR="#3D474D" CREATED="1623954820000" ID="Freemind_Link_1935819604" MODIFIED="1625251739000" POSITION="left" TEXT="Systemic Corruption">
<arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935709279" ENDARROW="Default" ID="Arrow_ID_34988524" STARTARROW="None" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935817711" ENDARROW="Default" ENDINCLINATION="-1;68;" ID="Arrow_ID_34988584" STARTARROW="None" STARTINCLINATION="371;17;" /><arrowlink COLOR="#98aab3" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-94;33;" ID="Arrow_ID_34988701" STARTARROW="None" STARTINCLINATION="145;133;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e67c73" COLOR="#454a4c" CREATED="1623945923000" ID="Freemind_Link_1935679012" MODIFIED="1625584665000" POSITION="left" TEXT="Affordable Housing">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935710356" ENDARROW="Default" ID="Arrow_ID_34988414" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Arrow_ID_34988463" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1942929718" ENDARROW="Default" ENDINCLINATION="175;89;" ID="Arrow_ID_34988471" STARTARROW="None" STARTINCLINATION="29;83;" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935709279" ENDARROW="Default" ENDINCLINATION="59;92;" ID="Arrow_ID_34988474" STARTARROW="None" STARTINCLINATION="26;127;" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ENDINCLINATION="348;92;" ID="Arrow_ID_34988487" STARTARROW="None" STARTINCLINATION="61;93;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679012" ENDARROW="Default" ID="Link_Target_ID_34988481" SOURCE="Freemind_Link_1942927879" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679012" ENDARROW="Default" ID="Link_Target_ID_34988512" SOURCE="Freemind_Link_1935679106" STARTARROW="None" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935679012" ENDARROW="Default" ENDINCLINATION="-100;0;" ID="Link_Target_ID_34988551" SOURCE="Freemind_Link_1935817711" STARTARROW="None" STARTINCLINATION="16;127;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e67c73" COLOR="#454a4c" CREATED="1623948345000" ID="Freemind_Link_1935712288" MODIFIED="1625251718000" POSITION="left" TEXT="Food Shortage">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ENDINCLINATION="14;98;" ID="Arrow_ID_34988450" STARTARROW="None" STARTINCLINATION="-181;471;" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Arrow_ID_34988573" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ENDINCLINATION="334;313;" ID="Arrow_ID_34988713" STARTARROW="None" STARTINCLINATION="-46;88;" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ID="Link_Target_ID_34988353" SOURCE="Freemind_Link_1935678557" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ENDINCLINATION="138;14;" ID="Link_Target_ID_34988361" SOURCE="Freemind_Link_1935678147" STARTARROW="None" STARTINCLINATION="14;98;" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ID="Link_Target_ID_34988362" SOURCE="Freemind_Link_1942920079" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935712288" ENDARROW="Default" ID="Link_Target_ID_34988669" SOURCE="Freemind_Link_1935681163" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e67c73" COLOR="#3D474D" CREATED="1624569881000" ID="Freemind_Link_1942929718" MODIFIED="1625251727000" POSITION="left" TEXT="Weak Political Voice">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ENDINCLINATION="231;133;" ID="Arrow_ID_34988485" STARTARROW="None" STARTINCLINATION="222;84;" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Arrow_ID_34988493" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1942929718" ENDARROW="Default" ENDINCLINATION="175;89;" ID="Link_Target_ID_34988471" SOURCE="Freemind_Link_1935679012" STARTARROW="None" STARTINCLINATION="29;83;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1942929718" ENDARROW="Default" ID="Link_Target_ID_34988523" SOURCE="Freemind_Link_1935821821" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e69545" COLOR="#3D474D" CREATED="1624569821000" ID="Freemind_Link_1942927751" MODIFIED="1625251705000" POSITION="right" TEXT="Education Inaccessability">
<linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1942927751" ENDARROW="Default" ID="Link_Target_ID_34988456" SOURCE="Freemind_Link_1935679106" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1942927751" ENDARROW="Default" ENDINCLINATION="68;71;" ID="Link_Target_ID_34988507" SOURCE="Freemind_Link_1942927879" STARTARROW="None" STARTINCLINATION="251;66;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1942927751" ENDARROW="Default" ENDINCLINATION="449;87;" ID="Link_Target_ID_34988515" SOURCE="Freemind_Link_1935821821" STARTARROW="None" STARTINCLINATION="62;78;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e69545" COLOR="#3D474D" CREATED="1624569834000" ID="Freemind_Link_1942927879" MODIFIED="1625251709000" POSITION="right" TEXT="Energy Shortage">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679012" ENDARROW="Default" ID="Arrow_ID_34988481" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1942927751" ENDARROW="Default" ENDINCLINATION="68;71;" ID="Arrow_ID_34988507" STARTARROW="None" STARTINCLINATION="251;66;" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1942927879" ENDARROW="Default" ID="Link_Target_ID_34988355" SOURCE="Freemind_Link_1935678557" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1942927879" ENDARROW="Default" ENDINCLINATION="-19;-86;" ID="Link_Target_ID_34988676" SOURCE="Freemind_Link_1935681163" STARTARROW="None" STARTINCLINATION="-32;199;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e69545" COLOR="#3D474D" CREATED="1623946432000" ID="Freemind_Link_1935685320" MODIFIED="1625251699000" POSITION="left" TEXT="Community Networks Breakdown">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-47;87;" ID="Arrow_ID_34988504" STARTARROW="None" STARTINCLINATION="-200;119;" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ENDINCLINATION="57;200;" ID="Arrow_ID_34988708" STARTARROW="None" STARTINCLINATION="15;98;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ID="Link_Target_ID_34988483" SOURCE="Freemind_Link_1935709279" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ENDINCLINATION="231;133;" ID="Link_Target_ID_34988485" SOURCE="Freemind_Link_1942929718" STARTARROW="None" STARTINCLINATION="222;84;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ENDINCLINATION="348;92;" ID="Link_Target_ID_34988487" SOURCE="Freemind_Link_1935679012" STARTARROW="None" STARTINCLINATION="61;93;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ENDINCLINATION="334;313;" ID="Link_Target_ID_34988713" SOURCE="Freemind_Link_1935712288" STARTARROW="None" STARTINCLINATION="-46;88;" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e69545" COLOR="#454a4c" CREATED="1623948095000" ID="Freemind_Link_1935709279" MODIFIED="1625251730000" POSITION="left" TEXT="Unrest &amp; Injustice">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935685320" ENDARROW="Default" ID="Arrow_ID_34988483" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ENDINCLINATION="-76;63;" ID="Arrow_ID_34988496" STARTARROW="None" STARTINCLINATION="-181;7;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935709279" ENDARROW="Default" ENDINCLINATION="59;92;" ID="Link_Target_ID_34988474" SOURCE="Freemind_Link_1935679012" STARTARROW="None" STARTINCLINATION="26;127;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935709279" ENDARROW="Default" ID="Link_Target_ID_34988524" SOURCE="Freemind_Link_1935819604" STARTARROW="None" /><font SIZE="14" BOLD="true"/></node>
<node BACKGROUND_COLOR="#e69545" COLOR="#3D474D" CREATED="1623945930000" ID="Freemind_Link_1935679106" MODIFIED="1625251707000" POSITION="left" TEXT="Healthcare Gaps">
<arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1942927751" ENDARROW="Default" ID="Arrow_ID_34988456" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679012" ENDARROW="Default" ID="Arrow_ID_34988512" STARTARROW="None" /><arrowlink COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935677900" ENDARROW="Default" ID="Arrow_ID_34988513" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Link_Target_ID_34988358" SOURCE="Freemind_Link_1935680313" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Link_Target_ID_34988364" SOURCE="Freemind_Link_1942921271" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ENDINCLINATION="14;98;" ID="Link_Target_ID_34988450" SOURCE="Freemind_Link_1935712288" STARTARROW="None" STARTINCLINATION="-181;471;" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ENDINCLINATION="-31;94;" ID="Link_Target_ID_34988454" SOURCE="Freemind_Link_1942927441" STARTARROW="None" STARTINCLINATION="-88;572;" /><linktarget COLOR="#98aab3" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Link_Target_ID_34988520" SOURCE="Freemind_Link_1935821821" STARTARROW="None" /><linktarget COLOR="#8acc47" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ID="Link_Target_ID_34988684" SOURCE="Freemind_Link_1935681163" STARTARROW="None" /><linktarget COLOR="#ff9f1a" DESTINATION="Freemind_Link_1935679106" ENDARROW="Default" ENDINCLINATION="57;200;" ID="Link_Target_ID_34988708" SOURCE="Freemind_Link_1935685320" STARTARROW="None" STARTINCLINATION="15;98;" /><font SIZE="14" BOLD="true"/></node>
</node>
</map>
"""

"""Parsing the MindMeister export. You can ignore this code. It is outputting the classes in the graph for double checking."""

#@title
root = ET.fromstring(MINDMAP)

nodes = dict() # name to node dict
node_classes = dict() # bg color to set of names
class_for_node = dict()

for child in root[0]:
  # print(child.tag, child.attrib)
  if child.tag != 'node':
    continue
  nodes[child.attrib['ID']] = child
  clazz = child.attrib['BACKGROUND_COLOR']
  if clazz not in node_classes:
    node_classes[clazz] = set()
  class_for_node[child.attrib['ID']] = child.attrib['BACKGROUND_COLOR']
  node_classes[clazz].add(child)

print("Found {} classes\n".format(len(node_classes)))
for color, clazz in node_classes.items():
  print(color)
  for node in clazz:
    print("",node.attrib['TEXT']) 

links = dict() # node id to set of node id
for name, node in nodes.items():
  links[name] = set()
  for link in node:
    if link.tag != 'arrowlink':
      continue
    #print(link.tag, link.attrib)
    links[name].add(link.attrib['DESTINATION'])

"""## Graph variants

The code hidden below defines the different variants, the graphical output should be self-explanatory.
"""

#@title
class Graph:
  # nodes: dict( id -> name ), class_for_node: dict( id -> clazz ), outlinks: dict( id -> set(id) )
  def __init__(self, nodes, clazzes, outlinks):
    self.node_names = nodes
    self.node_classes = dict() # class to set of ids
    for _id, clazz in class_for_node.items():
      self.node_classes[clazz] = self.node_classes.get(clazz, set())
      self.node_classes[clazz].add(_id)
    self.class_for_node = class_for_node
    self.outlinks = outlinks

  def make_singleton(self):
    self.outlinks = { _id: set() for _id in self.node_names }
    return self

  def make_line(self):
    _ids = list(nodes.keys())
    random.shuffle(_ids)
    self.outlinks = { _id: set() for _id in self.node_names }
    prev = None
    for _id in _ids:
      if prev is not None:
        self.outlinks[_id] = set([prev])
      prev = _id
    return self

  def make_radial(self):
    _ids = list(nodes.keys())
    center = random.choice(_ids)
    self.outlinks = { _id: set() for _id in self.node_names }
    for _id in _ids:
      if _id != center:
        self.outlinks[center].add(_id)
    return self

  def shuffle_links(self):
    total = len(self.outlinks)
    self.outlinks = { _id: set() for _id in self.node_names }
    current = 0
    _ids = list(nodes.keys())
    inreachable  = { _id : set([ _id ]) for _id in _ids } # node id to set of node id
    outreachable = { _id : set([ _id ]) for _id in _ids } # node id to set of node id

    def add_link(source, target):
        self.outlinks[source] = self.outlinks.get(source, set())
        self.outlinks[source].add(target)
        for _in in inreachable[source]:
          outreachable[_in].update(outreachable[target])
        for _out in outreachable[target]:
          inreachable[_out].update(inreachable[source])

    while current < total:
      random.shuffle(_ids)
      source = _ids[0]
      target  = _ids[1]
      if len(outreachable[target].intersection(inreachable[source])) == 0 and target not in self.outlinks.get(source, set()):
        current += 1
        add_link(source, target)

    accounted = set()
    for k, v in self.outlinks.items():
      if len(v):
        accounted.add(k)
      accounted.update(v)

    missing = list(set(_ids) - accounted)
    while len(missing) > 0:
      is_source = random.random() > 0.5
      other = random.choice(list(accounted))
      source = missing[0] if is_source else other
      target = other      if is_source else missing[0]
      add_link(source, target)
      accounted.add(missing[0])
      missing = missing[1:]

    return self

  def show(self):
    digraph = graphviz.Digraph(graph_attr={"size": GRAPH_PRINT_SIZE, "landscape":"portrait"})

    for _id, name in self.node_names.items():
      digraph.node(name, shape="box", fillcolor=self.class_for_node[_id], style='filled')
    for base, dests in self.outlinks.items():
      basetext = self.node_names[base]
      for dest in dests:
        digraph.edge(basetext, self.node_names[dest])
    return digraph


baseGraph      = Graph({ _id : node.attrib['TEXT'] for _id, node in nodes.items()}, class_for_node, links)
singletonGraph = copy.deepcopy(baseGraph).make_singleton()
lineGraph      = copy.deepcopy(baseGraph).make_line()
radialGraph    = copy.deepcopy(baseGraph).make_radial()
randomGraph1    = copy.deepcopy(baseGraph).shuffle_links()
randomGraph2    = copy.deepcopy(baseGraph).shuffle_links()
randomGraph3    = copy.deepcopy(baseGraph).shuffle_links()

GRAPHS = {
  'MindMeister': baseGraph,
  'Singleton'  : singletonGraph,
  'Line'       : lineGraph,
  'Radial'     : radialGraph,
  'Random1'     : randomGraph1,
  'Random2'     : randomGraph2,
  'Random3'     : randomGraph3,
}

GRAPHS['MindMeister'].show()

GRAPHS['Singleton'].show()

GRAPHS['Line'].show()

GRAPHS['Radial'].show()

GRAPHS['Random1'].show()

GRAPHS['Random2'].show()

GRAPHS['Random3'].show()

"""## Game Variants"""

#@title
class Game:
  def __init__(self):
    self.good = set()
    self.crisis = set()
    self.turn = 0
    self.finished = False
    self.started = False
    self.graph = None
    self.player = 0
    self.prob_crisis = 0.0
    self.prob_resolution = 0.0
    self.num_players = 0

  def start(self, graph, num_players, prob_crisis, prob_resolution):
    self.good = set(graph.node_names.keys())
    self.crisis = set()
    self.turn = 0
    self.finished = False
    self.started = True
    self.graph = graph
    self.num_players = num_players
    self.prob_crisis = prob_crisis
    self.prob_resolution = prob_resolution

  def step(self):
    "Returns True is the game has ended"
    if len(self.crisis) == len(graph.node_names):
      self.finished = True
    else:
      self.player += 1
      if self.player == self.num_players:
        self.player = 0
        self.turn += 1
    return self.finished

GAMES = dict()

"""### Base game

In every turn, each player can start a crisis based on ```crisis_creation_probability```, the crisis is started at a random node in the graph. If the node chosen at random is already in crisis, a random reachable node that is not in crisis is then activated. If no such a node is available, a new node is randomly selected until a node is set on crisis.

After a possible crisis generation, each player finishes their turn by potentially solving a crisis with ```crisis_resolution_probability```. The base game just picks a crisis node at random.
"""

#@title
class BaseGame(Game):
  def __init__(self):
    super().__init__()

  def cascade(self, node):
    "A node in crisis has been selected, deal with it. Returns the activated nodes."
    # follow a link
    outlinks = list(self.graph.outlinks[node])
    random.shuffle(outlinks)
    for outlink in outlinks:
      if outlink in self.good:
        self.good.remove(outlink)
        self.crisis.add(outlink)
        return [ outlink ]
    return []

  def step(self):
    if random.random() < creation_prob:
      # we got ourselves a crisis!
      done = False
      while not done:
        in_crisis = random.choice(list(self.graph.node_names.keys())) # any problem, in crisis or otherwise
        if in_crisis in self.crisis: # been there, done that
          done = len(self.cascade(in_crisis)) > 0
        else:
          self.good.remove(in_crisis)
          self.crisis.add(in_crisis)
          done = True
    if random.random() < resolution_prob:
      # don't just stand there, fix something!
      # here reinforcement learning would be handy    
      if len(self.crisis) > 0:
        to_solve = random.choice(list(self.crisis))
        self.crisis.remove(to_solve)
        self.good.add(to_solve)
    return super().step()

GAMES['BaseGame'] = BaseGame()

"""### Single cascade game

Same as base game, but when the node chosen at random is already in crisis, all its directly reachable nodes are activated. If no such a node is available, a new node is randomly selected until a node is set on crisis.
"""

#@title
class SingleCascade(BaseGame):
  def __init__(self):
    super().__init__()

  def cascade(self, node):
    changed = list()
    for outlink in self.graph.outlinks[node]:
      if outlink in self.good:
        self.good.remove(outlink)
        self.crisis.add(outlink)
        changed.append(outlink)
    return changed

GAMES['SingleCascade'] = SingleCascade()

"""This is the simulation code

"""

sim_results = list() # [ [ state ], [ number of turns run 1, number of turns run 2, ... ]

def do_one_run(max_turns, game, graph, num_players, creation_prob, resolution_prob):
  game.start(graph, num_players, creation_prob, resolution_prob)

  for turn in range(max_turns):
    for player in range(num_players):
      if game.step():
        break
    if game.finished:
      break
  return turn

total_conditions = 1
for col in range(len(SWEEPS)): 
  total_conditions *= len(SWEEPS[col])

print("Total conditions to evaluate: {:,}".format(total_conditions))
print("Total game runs: {:,}".format(total_conditions * RUNS))

for num_players in PLAYER_SWEEP:
  for creation_prob in CRISIS_CREATION_PROB_SWEEP:
    for resolution_prob in CRISIS_RESOLUTION_PROB_SWEEP:
      for graph_name in GRAPHS_SWEEP:
        graph = GRAPHS[graph_name]
        for game_name in GAMES_SWEEP:
          game = GAMES[game_name]
          condition = [game_name, graph_name, num_players, creation_prob, resolution_prob]

          this_run = list()
          for run in range(RUNS):
            turns = do_one_run(MAX_TURNS, game, graph, num_players, creation_prob, resolution_prob)
            this_run.append(turns + 1)
          l = np.array(this_run)
          _min, _median, _mean, _max = np.min(l), np.median(l), np.mean(l), np.max(l)
          if _max != MAX_TURNS:
            continue
          if np.sum(l == MAX_TURNS) < RUNS * REP_MIN_COMPLETION_PERC:
            continue
          if _min >= REP_MAX_MIN:
            continue
          if _median <= REP_MIN_MEDIAN:
            continue
          sim_results.append( [ condition, this_run ])
          print("G={:14} g={:14} P={} C={:0.2f} R={:0.2f}: min={:02d} median={:02.0f} mean={:02.2f} max={:02d}".format(game_name, graph_name, 
                                                                                                                  num_players, creation_prob, 
                                                                                                                  resolution_prob,_min, _median, _mean, _max))

"""Here we can drill down on each condition separately."""

print("Total reported conditions:", len(sim_results))

for col in range(len(COLUMN_NAMES)):
  conds = list(map(lambda x:x[0][col], sim_results))
  names = sorted(list(set(conds)))
  counts = { n: 0 for n in names }
  for c in conds:
    counts[c] += 1
  print("{}, from: {} reported:".format(COLUMN_NAMES[col], sorted(SWEEPS[col])))
  for n in names:
    print("\t{}: {} times".format(n, counts[n]))

"""For a sweep on all available conditions (1,680 combinations):

<pre>
Total reported conditions: 105
Game, from: ['BaseGame', 'SingleCascade'] reported:
	BaseGame: 21 times
	SingleCascade: 84 times
Graph, from: ['Line', 'MindMeister', 'Radial', 'Random1', 'Random2', 'Random3', 'Singleton'] reported:
	Line: 5 times
	MindMeister: 12 times
	Radial: 49 times
	Random1: 8 times
	Random2: 13 times
	Random3: 11 times
	Singleton: 7 times
Num. Player, from: [3, 4, 5, 6] reported:
	3: 17 times
	4: 27 times
	5: 24 times
	6: 37 times
Creation, from: [0.4, 0.5, 0.6, 0.7, 0.8] reported:
	0.4: 25 times
	0.5: 33 times
	0.6: 20 times
	0.7: 19 times
	0.8: 8 times
Resolution, from: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7] reported:
	0.2: 4 times
	0.3: 15 times
	0.4: 24 times
	0.5: 19 times
	0.6: 22 times
	0.7: 21 times
</pre>

For a sweep only with graphs, we get (240 conditions):

<pre>
Total reported conditions: 15
Game, from: ['BaseGame', 'SingleCascade'] reported:
	BaseGame: 5 times
	SingleCascade: 10 times
Graph, from: ['MindMeister'] reported:
	MindMeister: 15 times
Num. Player, from: [3, 4, 5, 6] reported:
	3: 3 times
	4: 1 times
	5: 3 times
	6: 8 times
Creation, from: [0.4, 0.5, 0.6, 0.7, 0.8] reported:
	0.4: 3 times
	0.5: 4 times
	0.6: 5 times
	0.7: 3 times
Resolution, from: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7] reported:
	0.2: 1 times
	0.3: 2 times
	0.4: 4 times
	0.5: 5 times
	0.6: 2 times
	0.7: 1 times
</pre>

Raw conditions:

<pre>
G=BaseGame       g=MindMeister    P=3 C=0.50 R=0.20: min=17 median=34 mean=32.83 max=40
G=SingleCascade  g=MindMeister    P=3 C=0.60 R=0.40: min=16 median=36 mean=33.81 max=40
G=SingleCascade  g=MindMeister    P=3 C=0.70 R=0.50: min=16 median=33 mean=32.83 max=40
G=SingleCascade  g=MindMeister    P=4 C=0.60 R=0.50: min=16 median=40 mean=35.56 max=40
G=SingleCascade  g=MindMeister    P=5 C=0.40 R=0.30: min=15 median=32 mean=32.05 max=40
G=SingleCascade  g=MindMeister    P=5 C=0.50 R=0.40: min=15 median=34 mean=32.81 max=40
G=SingleCascade  g=MindMeister    P=5 C=0.60 R=0.50: min=15 median=31 mean=30.43 max=40
G=BaseGame       g=MindMeister    P=6 C=0.40 R=0.30: min=17 median=40 mean=36.56 max=40
G=SingleCascade  g=MindMeister    P=6 C=0.40 R=0.40: min=16 median=40 mean=37.51 max=40
G=BaseGame       g=MindMeister    P=6 C=0.50 R=0.40: min=15 median=40 mean=35.97 max=40
G=SingleCascade  g=MindMeister    P=6 C=0.50 R=0.50: min=13 median=40 mean=37.82 max=40
G=BaseGame       g=MindMeister    P=6 C=0.60 R=0.50: min=16 median=40 mean=36.90 max=40
G=SingleCascade  g=MindMeister    P=6 C=0.60 R=0.60: min=15 median=40 mean=36.47 max=40
G=BaseGame       g=MindMeister    P=6 C=0.70 R=0.60: min=12 median=40 mean=37.11 max=40
G=SingleCascade  g=MindMeister    P=6 C=0.70 R=0.70: min=14 median=40 mean=36.07 max=40
</pre>
"""